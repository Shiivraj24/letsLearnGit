Software Requirements Specification (SRS) for Online Ticket Booking System

Introduction

Purpose: The purpose of the online ticket booking system is to provide users with a platform to browse and book tickets for various events.
Scope: The system will allow users to search for events, view event details, select seats, make payments, and receive e-tickets. It will also include an admin panel for managing events, seats, user accounts, and generating reports.
Functional Requirements
2.1 User Registration

Users can create an account by providing their name, email address, and password.
The system validates user input and ensures unique email addresses for each account.
2.2 User Authentication

Users can log in to their accounts using their email address and password.
The system authenticates user credentials and grants access to user-specific features.
2.3 Event Management

Admin can add, edit, and delete events.
Each event will have attributes such as title, description, date, time, location, and ticket prices.
2.4 Event Searching and Browsing

Users can search for events based on event type, date, location, or keyword.
The system displays a list of relevant events based on the search criteria.
2.5 Seat Selection

Users can select seats for a chosen event from an interactive seating layout.
The system displays real-time seat availability and prevents double booking.
2.6 Booking and Payment

Users can add selected seats to their cart and proceed to the payment process.
The system calculates the total cost, including taxes or fees.
Users can choose a payment method (credit card, PayPal, etc.) and provide payment details.
The system processes the payment transaction and generates a booking confirmation.
2.7 E-ticket Generation

After successful payment, the system generates an e-ticket containing event details, seat numbers, and a unique booking reference number.
Users can view and download their e-tickets from their account or receive them via email.
Non-functional Requirements

Performance: The system should handle concurrent user requests efficiently with fast response times and minimal downtime.
Security: User authentication, session management, and payment transactions should be secure.
User Interface: The user interface should be intuitive, visually appealing, and responsive across devices.
Reliability: The system should be reliable, ensuring accurate bookings and payments without data loss or corruption.
Scalability: The system should be scalable to handle future growth in users, events, and transactions.
Business Entities:

User
Attributes: UserID, Name, Email, Password
Event
Attributes: EventID, Title, Description, Date, Time, Location
Seat
Attributes: SeatID, EventID, SeatNumber, Availability
Booking
Attributes: BookingID, UserID, EventID, SeatID, BookingDate, PaymentStatus
MySQL Database Tables:

User
Columns: UserID (Primary Key), Name, Email, Password
Event
Columns: EventID (Primary Key), Title, Description, Date, Time, Location
Seat
Columns: SeatID (Primary Key), EventID (Foreign Key), SeatNumber, Availability
Booking
Columns: BookingID (Primary Key), UserID (Foreign Key), EventID (Foreign Key), SeatID (Foreign Key), BookingDate, PaymentStatus
ER Diagram:

lua
Copy code
                 +--------------+
                 |   
User |
+--------------+
| UserID (PK) |
| Name |
| Email |
| Password |
+--------------+
|
|
+--------------+
| Event |
+--------------+
| EventID (PK) |
| Title |
| Description |
| Date |
| Time |
| Location |
+--------------+
|
|
+--------------+
| Seat |
+--------------+
| SeatID (PK) |
| EventID (FK) |
| SeatNumber |
| Availability |
+--------------+
|
|
+--------------+
| Booking |
+--------------+
| BookingID (PK)|
| UserID (FK) |
| EventID (FK) |
| SeatID (FK) |
| BookingDate |
| PaymentStatus|
+--------------+
